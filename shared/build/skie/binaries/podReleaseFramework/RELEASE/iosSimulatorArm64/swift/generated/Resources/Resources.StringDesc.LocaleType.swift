// Generated by Touchlab SKIE 0.9.3

import Foundation

extension MultiPlatformLibrary.Skie.Resources.StringDesc.LocaleType {

    @frozen
    public enum __Sealed : Swift.Hashable {

        case custom(MultiPlatformLibrary.StringDescLocaleType.Custom)
        case system(MultiPlatformLibrary.StringDescLocaleType.System)

    }

}

public func onEnum<__Sealed : MultiPlatformLibrary.StringDescLocaleType>(of sealed: __Sealed) -> MultiPlatformLibrary.Skie.Resources.StringDesc.LocaleType.__Sealed {
    if let sealed = sealed as? MultiPlatformLibrary.StringDescLocaleType.Custom {
        return MultiPlatformLibrary.Skie.Resources.StringDesc.LocaleType.__Sealed.custom(sealed)
    } else if let sealed = sealed as? MultiPlatformLibrary.StringDescLocaleType.System {
        return MultiPlatformLibrary.Skie.Resources.StringDesc.LocaleType.__Sealed.system(sealed)
    } else {
        fatalError("Unknown subtype \(sealed). This error should not happen under normal circumstances since SirClass: MultiPlatformLibrary.StringDescLocaleType is sealed.")
    }
}

@_disfavoredOverload
public func onEnum<__Sealed : MultiPlatformLibrary.StringDescLocaleType>(of sealed: __Sealed?) -> MultiPlatformLibrary.Skie.Resources.StringDesc.LocaleType.__Sealed? {
    if let sealed {
        return onEnum(of: sealed) as MultiPlatformLibrary.Skie.Resources.StringDesc.LocaleType.__Sealed
    } else {
        return nil
    }
}
